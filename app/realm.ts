// NOTE: DO NOT EDIT THIS FILE!!!

import * as Realm from "realm-web";

const realm_app_id = "process.env.REALM_APP_ID";
const CLUSTER_NAME = "process.env.CLUSTER_NAME";
const DB_NAME = "process.env.DB_NAME";

export const app = new Realm.App({ id: realm_app_id });
export default Realm;

// Ensure that the user is logged in, if not create anon accounts for them
export const ensureLoggedIn = async (app) => {
	console.log("called", app.currentUser);
	if (app.currentUser === null) {
		const res = await loginAnonymous();
		return res;
	}
	return app.currentUser;
};

// IFFE to await login for everyone
(async function () {
	await ensureLoggedIn(app);
})();

const mongodb = app.currentUser?.mongoClient(CLUSTER_NAME);
export const modelsDb = mongodb?.db(DB_NAME)?.collection("models");
export const conditionsDb = mongodb?.db(DB_NAME)?.collection("conditions");

export const commentsDb = mongodb?.db(DB_NAME)?.collection("comments");
export const datasetsDb = mongodb?.db(DB_NAME)?.collection("datasets");

export const userDataDb = mongodb?.db(DB_NAME)?.collection("user-data");

export const invitationsDb = mongodb?.db(DB_NAME)?.collection("invitations");

export async function loginAnonymous() {
	if (app.currentUser !== null) {
		return;
	}
	console.log("Creating anon user");
	// Create an anonymous credential
	const credentials = Realm.Credentials.anonymous();
	try {
		// Authenticate the user
		const user = await app.logIn(credentials);
		return user;
	} catch (err) {
		console.error("Failed to log in", err);
	}
}
